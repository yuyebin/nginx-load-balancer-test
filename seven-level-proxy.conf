map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream http_server {
        ip_hash;
        server NODE1:80;
        server NODE2:80;
        server NODE3:80;
    }
upstream https_server {
    ip_hash;
    server NODE1:443;
    server NODE2:443;
    server NODE3:443;
}
server {
    listen 80 default_server;
    server_name a.example.com;
    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_pass http://http_server;
    }
}

server {

    listen 443 ssl default_server;
    server_name a.example.com;
    ssl_certificate        /etc/ssl/certs/a.example.com.pem;
    ssl_certificate_key    /etc/ssl/certs/a.example.com.key;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers    HIGH:!aNULL:!MD5;
    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_pass https://https_server;
    }
}